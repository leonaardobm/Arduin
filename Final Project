#include <SPI.h>
#include <Ethernet.h>

const int Buzzer = 9;
const int LED[] = {
2,3,4,5,6,7,8};
const int LM35 = A0;
float temperatura;

byte mac[] = { 0x00, 0xAA, 0xBB, 0xCC, 0xDE, 0x19 };

char DEVID1[] = "vF2054DD42D2E024";

uint8_t pinDevid1 = 9;

boolean DEBUG = true;

char serverName[] = "api.pushingbox.com";
boolean pinDevid1State = false;
boolean lastConnected = false;

EthernetClient client;

void setup() {
  Serial.begin(9600);
  pinMode(pinDevid1, INPUT);
  pinMode(Buzzer, OUTPUT);
  for(int x = 0; x < 7; x++){
      pinMode(LED[x], OUTPUT);
  }
  
  if (Ethernet.begin(mac) == 0) {
    Serial.println("Failed to configure Ethernet using DHCP");
    while(true);
  }
  else{
    Serial.println("Ethernet ready");
    Serial.print("My IP address: ");
    Serial.println(Ethernet.localIP());
  }
  delay(1000); 
}

void loop(){
  temperatura = (float(analogRead(LM35))*5/(1023))/0.01;
  Serial.print("Temperatura: ");
  Serial.println(temperatura);
  delay(1000);
 

  if(temperatura > 25){
  digitalWrite(LED[0], HIGH);
  }
  else{
  digitalWrite(LED[0], LOW);
  }
  if(temperatura > 25.50){
  digitalWrite(LED[1], HIGH);
  }
  else{
  digitalWrite(LED[1], LOW);
  }
  if(temperatura > 26){
  digitalWrite(LED[2], HIGH);
  }
  else{
  digitalWrite(LED[2], LOW);
  }
  if(temperatura > 26.50){
  digitalWrite(LED[3], HIGH);
  }
  else{
  digitalWrite(LED[3], LOW);
  }
  if(temperatura > 27){
  digitalWrite(LED[4], HIGH);
  }
  else{
  digitalWrite(LED[4], LOW);
  }
  if(temperatura > 27){
  digitalWrite(LED[5], HIGH);
  }
  else{
  digitalWrite(LED[5], LOW);
  }
     
  if(temperatura > 27){
  digitalWrite(LED[6], HIGH);
  digitalWrite(Buzzer,HIGH);
  }
  else{
  digitalWrite(LED[6], LOW);
  digitalWrite(Buzzer,LOW);
  }

  

  
      if (digitalRead(pinDevid1) == HIGH && pinDevid1State == false)
      {
        if(DEBUG){Serial.println("pinDevid1 is HIGH");}
        pinDevid1State = true;
        sendToPushingBox(DEVID1);
      }
       if (digitalRead(pinDevid1) == LOW && pinDevid1State == true)
      {
        if(DEBUG){Serial.println("pinDevid1 is LOW");}
        pinDevid1State = false;
      }
      
      if (client.available()) {
        char c = client.read();
        if(DEBUG){Serial.print(c);}
      }

      if (!client.connected() && lastConnected) {
        if(DEBUG){Serial.println();}
        if(DEBUG){Serial.println("disconnecting.");}
        client.stop();
      }

      lastConnected = client.connected();

     
}


//Function for sending the request to PushingBox
void sendToPushingBox(char devid[]){
  client.stop();
  if(DEBUG){Serial.println("connecting...");}

  if (client.connect(serverName, 80)) {
    if(DEBUG){Serial.println("connected");}

    if(DEBUG){Serial.println("sendind request");}
    client.print("GET /pushingbox?devid=");
    client.print(devid);
    client.println(" HTTP/1.1");
    client.print("Host: "); 
    client.println(serverName);
    client.println("User-Agent: Arduino");
    client.println();
  } 
  else {
    if(DEBUG){Serial.println("connection failed");}
  }
  
}
